plugins {
    id 'fabric-loom' version '1.2-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
group = project.maven_group

def release_tag = System.getenv("RELEASE_TAG")
def build_id = System.getenv("BUILD_ID")

version = release_tag == null ? "mc${project.minecraft_version}-${project.mod_version}" : release_tag

if (build_id != null) {
    version += build_id == 'SNAPSHOT' ? '-SNAPSHOT' : "+build.${build_id}"
}

loom {
    accessWidenerPath = file("src/main/resources/phosphor.accesswidener")
	
	mixin {
        defaultRefmapName = "mixins.phosphor.refmap.json"
    }
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${1.20+build.1}:v2"
	modImplementation "net.fabricmc:fabric-loader:${0.14.21}"
}

processResources {
    inputs.property "version", project.mod_version

    filesMatching("fabric.mod.json") {
        expand "version": project.mod_version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from "LICENSE.txt"
}
